'use strict';

exports.__esModule = true;
exports.default = loggingMiddleware;

var _immutablediff = require('immutablediff');

var _immutablediff2 = _interopRequireDefault(_immutablediff);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function loggingMiddleware(fn) {
  return function () {
    logStateUpdate.apply(undefined, arguments);
    return fn.apply(undefined, arguments);
  };
}

/* eslint-disable no-console */
function logStateUpdate(currentState, nextState) {
  if (console.group) {
    console.group('%cState mutation', 'font-weight: bold;');
  }
  console.log('%cCurrent state', 'color: gray; font-weight: bold; %O', currentState.toJS());
  var operations = (0, _immutablediff2.default)(currentState, nextState);
  if (operations.size > 1) {
    console.log('%cOperations %O', 'font-weight: bold;', (0, _immutablediff2.default)(currentState, nextState).toJS());
  } else if (operations.size === 1) {
    var operation = operations.first().toJS();
    console.log('%cOperation', 'font-weight: bold;', operation.op, operation.path, operation.value);
  } else {
    console.log('%cOperation', 'font-weight: bold;', 'Noop');
  }
  console.log('%cNext state', 'color: green; font-weight: bold; %O', nextState ? nextState.toJS() : '');

  if (console.groupEnd) console.groupEnd();
}