'use strict';

exports.__esModule = true;
exports.getInternalMethods = getInternalMethods;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var builtInClassMethods = Object.getOwnPropertyNames(function Noop() {
  _classCallCheck(this, Noop);
}.prototype);

function getInternalMethods(cls) {
  return Object.getOwnPropertyNames(cls.prototype).reduce(function (obj, name) {
    var method = cls.prototype[name];
    if (builtInClassMethods.indexOf(name) !== -1) return obj;
    if (typeof method !== 'function') return obj;
    obj[name] = method;
    return obj;
  }, {});
}