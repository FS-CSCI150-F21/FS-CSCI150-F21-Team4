'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = wrap;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _shallowequal = require('shallowequal');

var _shallowequal2 = _interopRequireDefault(_shallowequal);

var _component = require('./component');

var _component2 = _interopRequireDefault(_component);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function wrap(ComponentClass) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var impure = _ref.impure,
      tideProps = _objectWithoutProperties(_ref, ['impure']);

  var mappers = arguments[2];

  function mapProps(props) {
    return Object.keys(mappers).reduce(function (obj, key) {
      var _extends2;

      var mapper = mappers[key];
      if (process.env.NODE_ENV !== 'production') {
        if (typeof mapper !== 'function') {
          throw new Error('Mapper must be a function');
        }
      }
      return mapper ? _extends({}, obj, (_extends2 = {}, _extends2[key] = mapper(props[key]), _extends2)) : obj;
    }, props);
  }
  return function (_React$Component) {
    _inherits(Wrapped, _React$Component);

    function Wrapped() {
      _classCallCheck(this, Wrapped);

      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    Wrapped.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
      if (impure) return true;
      return !(0, _shallowequal2.default)(this.props, nextProps);
    };

    Wrapped.prototype.render = function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _component2.default,
        tideProps,
        function (props) {
          return _react2.default.createElement(ComponentClass, _extends({}, mappers ? mapProps(props) : props, _this2.props));
        }
      );
    };

    return Wrapped;
  }(_react2.default.Component);
}